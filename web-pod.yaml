apiVersion: v1
kind: Pod
metadata:
  name: nginx-decorated-pod
spec:
  hostname: nuc8i5beh
  restartPolicy: OnFailure
  containers:
  - name:  ip-adder
    image: busybox
    command: ["sh","-c","ip addr | grep inet >>/mnt/data/index.html; date >>/mnt/data/index.html; echo ==========================================================================>>/mnt/data/index.html;" ]
    volumeMounts:
    - mountPath: /mnt/data
      name: www-data
  - name: nginx
    image: nginx:1.15
    ports:
    - containerPort: 80
      hostPort: 8086  #microk8s specific - took a short cut to expose the service on the host machine wityhout using the service
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: www-data
    readinessProbe:
      tcpSocket:
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 10
    livenessProbe:
      httpGet:
        host: nuc8i5beh
        port: 8086
      initialDelaySeconds: 150
      periodSeconds: 20
  volumes:
  - name: www-data
    persistentVolumeClaim:
      claimName: http-claim



---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: http-claim
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 40Mi
  storageClassName: microk8s-hostpath  #microk8s specific

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: vol
spec:
  capacity:
    storage: 50Mi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /home/cloud_user/Public/commonfolder/web #put in your folder here where the service account will have read write access
  storageClassName: microk8s-hostpath #microk8s specific
